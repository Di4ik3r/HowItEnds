[gd_scene load_steps=14 format=2]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
output_port_for_preview = 0
function = 0

[sub_resource type="OpenSimplexNoise" id=6]
seed = 1
period = 4.0
persistence = 0.0
lacunarity = 3.52

[sub_resource type="NoiseTexture" id=7]
seamless = true
noise = SubResource( 6 )

[sub_resource type="VisualShaderNodeTexture" id=8]
output_port_for_preview = 0
texture = SubResource( 7 )

[sub_resource type="VisualShaderNodeScalarOp" id=9]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.03 ]

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeColorConstant" id=13]
output_port_for_preview = 0
constant = Color( 0.146973, 0.4375, 0, 1 )

[sub_resource type="VisualShader" id=12]
code = "shader_type spatial;
uniform sampler2D tex_frg_5;



void vertex() {
// Output:0

}

void fragment() {
// Color:9
	vec3 n_out9p0 = vec3(0.146973, 0.437500, 0.000000);
	float n_out9p1 = 1.000000;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out2p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// ScalarOp:6
	float n_in6p1 = 0.03000;
	float n_out6p0 = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) + n_in6p1;

// ScalarFunc:8
	float n_out8p0 = round(n_out6p0);

// Output:0
	ALBEDO = n_out9p0;
	ALPHA = n_out8p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -160, 36.25 )
nodes/fragment/0/position = Vector2( 600, 40 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -120, 80 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -200, 320 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( -60, 340 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( 20, 60 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( 200, 140 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( 140, 380 )
nodes/fragment/8/node = SubResource( 11 )
nodes/fragment/8/position = Vector2( 360, 260 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( 360, -20 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 2, 0, 5, 0, 5, 0, 6, 0, 4, 0, 7, 0, 6, 0, 8, 0, 8, 0, 0, 1, 9, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 12 )

[sub_resource type="CylinderMesh" id=15]
material = SubResource( 14 )
radial_segments = 6

[node name="Food" type="Spatial"]

[node name="MeshHolder" type="Spatial" parent="."]
transform = Transform( 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0.25, 0 )

[node name="MeshInstance" type="MeshInstance" parent="MeshHolder"]
transform = Transform( 0.6, 0, 0, 0, 0.5, 0, 0, 0, 0.6, 0, 0, 0 )
mesh = SubResource( 15 )
material/0 = null
